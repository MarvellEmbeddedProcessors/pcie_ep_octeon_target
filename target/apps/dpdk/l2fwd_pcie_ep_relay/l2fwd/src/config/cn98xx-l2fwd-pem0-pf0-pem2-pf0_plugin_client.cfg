/**
 * Objects and variables
 * Optional objects and variables are shown in square brackets
 *
 * Variables
 * ----------
 * int idx, end_idx, mtu, hb_interval, hb_miss_count = 0...n
 * char[] to_host_dbdf, to_wire_dbdf = "xxxx:xx:x.x"
 * char[] mac = xx:xx:xx:xx:xx:xx
 * bool autoneg, pause_mode = 0/1
 * long supported_modes, advertised_modes = 0...n
 * int pkind = 0/57/59
 *
 * if vf[mac] is not specified, it will be derived from pf[mac]
 * vf[mac] will start from (pf[mac] + 1)
 * it will be auto incremented for each vf[idx:end_idx]
 *
 * Objects
 * -------
 * id = { idx, [end_idx] };
 * dbdfs = { [to_host_dbdf], [to_wire_dbdf] };
 * if = { [mac], [mtu], [autoneg], [pause_mode], [speed], [supported_modes], [advertised_modes] };
 * fn_base = { id, [pkind], [dbdfs], [if] };
 * soc = { pem };
 * pem = { id, pf };
 * pf = { fn_base, [hb_interval], [hb_miss_count], [vf] };
 * vf = { fn_base };
 */


soc = {
	/* 1 pem */
	pem = (
		{
			idx = 0;
			pf = (
				{
					idx = 0;
					autoneg = 0x3;
					pause_mode = 0x3;
					speed = 10000;
					supported_modes = 0x1;
					advertised_modes = 0x1;
					hb_interval = 1000;
					hb_miss_count = 20;
#					to_host_dbdf = "0002:12:00.1";
#					to_wire_dbdf = "0002:02:00.0";
					/* 1 vf's per pf */
					vf = (
						{
							idx = 0;
							autoneg = 0x3;
							pause_mode = 0x3;
							speed = 10000;
							supported_modes = 0x1;
							advertised_modes = 0x1;
						}
					);
				}
			);
		},
		{
			idx = 2;
			/* 4 pf per pem */
			pf = (
				{
					idx = 0;
					autoneg = 0x3;
					pause_mode = 0x3;
					speed = 10000;
					supported_modes = 0x1;
					advertised_modes = 0x1;
					hb_interval = 1000;
					hb_miss_count = 20;
#					to_host_dbdf = "0002:13:00.1";
#					to_wire_dbdf = "0002:03:00.0";
					/* 1 vf's per pf */
					vf = (
						{
							idx = 0;
							autoneg = 0x3;
							pause_mode = 0x3;
							speed = 10000;
							supported_modes = 0x1;
							advertised_modes = 0x1;
						}
					);
				}
			);
		}
	);
};
